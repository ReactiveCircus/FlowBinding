buildscript {
    ext.isCiBuild = System.getenv("CI") == "true"

    ext.androidBuildConfig = [
            minSdk    : 21,
            targetSdk : 29,
            compileSdk: 29,
            buildTools: '29.0.2'
    ]

    ext.versions = [
            androidGradlePlugin: '3.6.0-alpha10',
            mavenPublishPlugin : '0.9.0-SNAPSHOT',
            kotlin             : '1.3.50',
            detekt             : '1.0.1',
            kotlinx            : [
                    coroutines: '1.3.1',
            ],
            androidx           : [
                    core              : '1.2.0-alpha04',
                    annotation        : '1.1.0',
                    appCompat         : '1.1.0',
                    activity          : '1.1.0-alpha03',
                    fragment          : '1.2.0-alpha03',
                    coordinatorLayout : '1.1.0-beta01',
                    recyclerView      : '1.1.0-beta04',
                    viewPager2        : '1.0.0-beta04',
                    swipeRefreshLayout: '1.1.0-alpha02',
                    drawerLayout      : '1.1.0-alpha03',
                    constraintLayout  : '1.1.3',
                    arch              : '2.1.0',
                    lifecycle         : '2.2.0-alpha04',
                    test              : [
                            core   : '1.2.1-alpha02',
                            monitor: '1.3.0-alpha02',
                            rules  : '1.3.0-alpha02',
                            runner : '1.3.0-alpha02',
                            ext    : [
                                    junit: '1.1.2-alpha02'
                            ]
                    ],
                    espresso          : '3.3.0-alpha02'
            ],
            material           : '1.1.0-alpha10',
            blueprint          : '1.2.0',
            junit              : '4.12',
            kluent             : '1.53'
    ]

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidGradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${versions.detekt}"
        classpath "com.vanniktech:gradle-maven-publish-plugin:${versions.mavenPublishPlugin}"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                // Force all Kotlin stdlib artifacts to use the same version.
                if (details.requested.group == 'org.jetbrains.kotlin' && details.requested.name.startsWith('kotlin-stdlib')) {
                    details.useVersion versions.kotlin
                }
            }
        }
    }

    plugins.withType(com.android.build.gradle.LibraryPlugin) {
        project.android.libraryVariants.all { variant ->
            // TODO replace with https://issuetracker.google.com/issues/72050365 once released.
            variant.generateBuildConfigProvider.configure { task ->
                task.enabled = false
            }
        }
    }

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
        plugin.extension.compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    tasks.withType(JavaCompile).configureEach { task ->
        task.sourceCompatibility = JavaVersion.VERSION_1_8
        task.targetCompatibility = JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
        task.kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
        task.kotlinOptions {
            freeCompilerArgs += [
                    '-progressive',
                    '-XXLanguage:+NewInference',
                    '-Xuse-experimental=kotlin.Experimental',
            ]
        }
    }

    tasks.withType(Test).configureEach {
        maxParallelForks Runtime.runtime.availableProcessors() * 2
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
}

subprojects {
    apply from: "$project.rootDir/gradle/detekt.gradle"
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
