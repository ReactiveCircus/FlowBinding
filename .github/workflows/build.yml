name: Build

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

env:
  CI: true
  GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx4g -XX:+HeapDumpOnOutOfMemoryError"
  TERM: dumb

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: ./gradlew assemble

  checks:
    name: Checks (unit tests, static analysis and binary compatibility API check)
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - uses: gradle/gradle-build-action@v2
      - name: Checks
        run: ./gradlew test apiCheck detekt lintDebug -PslimTests

  instrumented-tests:
    name: Instrumented tests
    runs-on: macos-latest
    strategy:
      matrix:
        module:
          - flowbinding-common
          - flowbinding-android
          - flowbinding-activity
          - flowbinding-appcompat
          - flowbinding-core
          - flowbinding-drawerlayout
          - flowbinding-lifecycle
          - flowbinding-material
          - flowbinding-navigation
          - flowbinding-preference
          - flowbinding-recyclerview
          - flowbinding-swiperefreshlayout
          - flowbinding-viewpager
          - flowbinding-viewpager2

    timeout-minutes: 30
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
      ENABLE_APP_VERSIONING: false

    steps:
      - uses: actions/checkout@v3

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'

      - uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd

      - name: Generate AVD snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          channel: canary
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          channel: canary
          script: ./gradlew ${{ matrix.module }}:connectedCheck

  deploy-snapshot:
    name: Deploy snapshot
    needs: [assemble, checks]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
      - uses: gradle/gradle-build-action@v2
      - name: Deploy snapshot
        run: ./gradlew clean publish --no-daemon --no-parallel
